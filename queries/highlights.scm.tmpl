; GENERATED VIA https://github.com/vito/tree-sitter-bass

(comment) @comment.line

["(" ")" "[" "]" "{" "}"] @punctuation.bracket

[(ignore) (null) (bool)] @constant.builtin

(int) @{{hl "constant.numeric" "number" "constant.numeric"}}

(string (string_escape) @{{hl "constant.character.escape" "string.escape" "constant.character.escape"}})

(string) @string

[(command) (path) (relpath)] @namespace

(keyword) @string.special.symbol

{{range .Classes}}
((list . (symbol) {{.}})
 (set! "priority" 105))

((cons . (symbol) {{.}})
 (set! "priority" 105))
{{end}}

((list
   (symbol) @operator
   (#match? @operator "&"))
 (set! "priority" 105))

((cons
   (symbol) @operator
   (#match? @operator "&"))
 (set! "priority" 105))

((list
   .
   (symbol) @function.macro
   (#eq? @function.macro "->")
   .
   (symbol) @variable.parameter
   (symbol) @function)
 (set! "priority" 105))

((list
   .
   (symbol) @function.macro
   (#eq? @function.macro "->")
   .
   (_)
   (symbol) @function)
 (set! "priority" 105))

; first symbol in a list form is a combiner call
(list . (symbol) @function)

; be conservative; we don't want to just call every single symbol a variable
(cons (symbol) @variable)
(scope (symbol) @variable)
(subpath form: (symbol) @variable)
(subbind form: (symbol) @variable)
